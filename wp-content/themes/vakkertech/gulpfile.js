const concat = require('gulp-concat');
const del = require('del');
const gulp = require('gulp');
const minify = require('gulp-minify');
const webpack = require('webpack');
const gulpWebpack = require('webpack-stream');

const path = {
  src: './src/',
  dist: './dist/',
  webpackConfig: './webpack.config.js'
};

// Build our webpack 4 bundles
gulp.task('build:webpack', function(cb) {
  return gulp.src(path.src + 'index.js')
  .pipe(gulpWebpack(require(path.webpackConfig)), webpack)
  .pipe(gulp.dest(path.dist));
});


// Concat minified base64 font CSS files with main CSS file
// **POST WEBPACK BUNDLE**
gulp.task('build:css', function() {
  return gulp.src(
      [
          path.dist + 'eot.css',
          path.dist + 'ttf.css',
          path.dist + 'woff.css',
          path.dist + 'woff2.css',
          path.dist + 'css/app.min.css'
      ]
  )
  .pipe(concat('app.min.css'))
  .pipe(minify())
  .pipe(gulp.dest('./dist/css'));
});

// Remove base64 font.css files generated by webpack
gulp.task('clean:fonts', function () {
  return del([
    'dist/eot.css',
    'dist/ttf.css',
    'dist/woff.css',
    'dist/woff2.css'
  ]);
});

gulp.task('default', gulp.series('build:webpack', 'build:css', 'clean:fonts'));